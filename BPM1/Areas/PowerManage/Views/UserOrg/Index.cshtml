@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutMiniUI.cshtml";
}

<style>
    .mini-splitter-pane2 .mini-panel-border {
        border-left: none;
        border-right: none;
        border-bottom: none;
    }
    .mini-grid-headerCell:last-child, .mini-grid-cell:last-child {
        border-right: none;
    }
    #form1.searchBox + .mini-toolbar {
        padding:10px 0 !important;
    }
    .mini-toolbar {
        padding:10px 0 !important;
    }
</style>
<div class="listcont">
    <div class="listcontainer" style="position:absolute;top:12px;left: 12px;right: 12px;bottom: 12px;">

        <div class="mini-splitter" style="width:100%;height:100%;">
            <div size="240" minSize="260" showCollapseButton="false">
                <div class="mini-toolbar" style="padding:2px;border-top:0;border-left:0;border-right:0;">
                    <a class="mini-button green" plain="true" onclick="UserOrganizationObj.btnAdd">新增</a>
                    <a class="mini-button Pink" plain="true" onclick="UserOrganizationObj.btnEdit">编辑</a>
                    <a class="mini-button gules" plain="true" onclick="UserOrganizationObj.btnDel">删除</a>
                    <a class="mini-button Blue" plain="true" onclick="UserOrganizationObj.btnSort">排序</a>
                </div>
                <div class="mini-fit">
                    <ul id="tree" class="mini-tree" url="/PowerManage/UsersOrganization/GetJson" style="width:100%;"
                        showTreeIcon="true" textField="Name" idField="ID" parentField="ParentID" resultAsTree="false" expandOnLoad="true" onnodeselect="UserObj.btnSearch()"></ul>
                </div>
            </div>
            <div>
                <div style="width:100%;position:relative;">
                    <div id="form1" class="searchBox">
                        <a class="mini-button green" iconCls="icon-add" plain="true" onclick="UserObj.btnAdd">新增人员</a>
                        <a class="mini-button gules" iconCls="icon-remove" plain="true" onclick="UserObj.btnDel">删除人员</a>
                    </div>
                    <div class="mini-toolbar button-right" style="padding:2px;border:0;width:310px;">
                        <input id="txtKey" class="mini-textbox" emptyText="请输入姓名或账户" style="width:250px;float:left;" onenter="UserObj.btnSearch()" />
                        <a class="mini-button search-button-my btn-right-last" iconCls="icon-download" plain="true" onclick="UserObj.btnSearch()">查询</a>
                    </div>
                </div>
                <div class="mini-fit">
                    <div id="grid" class="mini-datagrid"  allowMoveColumn="false" style="width:100%;height:100%;" idField="UserOrgID" onbeforeload="basePageSizeObj.beforeload"
                         url="/PowerManage/UserOrg/GetPagerJson" showFilterRow="false" sortField="U_SortNo"  allowAlternating="true">
                        <div property="columns">
                            <div type="indexcolumn"></div>
                            <div field="Cn" width="120" headerAlign="center" align="left" allowSort="false">姓名</div>
                            <div field="UID" width="120" headerAlign="center" align="left" allowSort="false">账户</div>

                            <div field="StationsID" width="120" headerAlign="center" align="left" allowSort="false" renderer="stationObj.onRenderer">岗位</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    //miniui初始化
    mini.parse();

    //岗位
    var stationObj = {
        data: null,
        //数据加载
        loadData: function () {
            $.ajax({
                type: "GET",
                url: "/PowerManage/Station/GetStationJson",
                dataType: "json",
                success: function (data1) {
                    stationObj.data = data1;
                },
                error: function () {
                }
            });
        },
        //行加载：岗位
        onRenderer: function (e) {
            if (!!stationObj.data) {
                for (var i = 0, l = stationObj.data.length; i < l; i++) {
                    var g = stationObj.data[i];
                    if (g.ID == e.value)
                        return g.Name;
                }
            }
            return "";
        }
    };

    var UserOrganizationObj = {
        //表格对象
        tree: mini.get("tree"),
        //增加事件
        btnAdd: function () {
            hasng.WinOpen({
                url: "/PowerManage/UsersOrganization/AddUsersOrgView",
                title: "新增用户组织机构", width: 700, height: 260,
                onload: function (iframe) {
                    
                    var data = {
                        action: "add"
                    };
                    iframe.contentWindow.UserOrganizationObj.setData(data);
                },
                ondestroy: function (action) {
                    UserOrganizationObj.tree.reload();
                }
            });
        },
        //编辑事件
        btnEdit: function () {
            var row = UserOrganizationObj.tree.getSelectedNode();
            if (row) {
                hasng.WinOpen({
                    url: "/PowerManage/UsersOrganization/AddUsersOrgView",
                    title: "编辑用户组织机构", width: 700, height: 260,
                    onload: function (iframe) {
                        
                        var data = {
                            action: "edit",
                            id: row.ID
                        };
                        iframe.contentWindow.UserOrganizationObj.setData(data);
                    },
                    ondestroy: function (action) {
                        UserOrganizationObj.tree.reload();
                    }
                });
            } else {
                 hasng.Alert();
            }
        },
        //删除事件
        btnDel: function () {
            var row = UserOrganizationObj.tree.getSelectedNode();
            if (row) {
                if (typeof (row.children) != "undefined" && row.children.length > 0) {
                    mini.alert("所选数据下有从属数据，禁止删除");
                    return;
                }
                hasng.DelConfirm(function () {
                            var id = row.ID;
                            UserOrganizationObj.tree.loading("操作中，请稍后......");
                            $.ajax({
                                url: "/PowerManage/UsersOrganization/Delete",
                                data: { "id": row.ID },
                                type: "Post",
                                async: false,
                                success: function (text) {
                                    mini.alert("删除成功！", "提示", function () {
                                        UserOrganizationObj.tree.reload();
                                    });
                                },
                                error: function () {
                                    mini.alert("出现异常！");
                                }
                            });
                    });
            } else {
                mini.alert("请选中一条数据！", "", function () { $('.mini-button').removeClass('icon-style'); });
            }
        },
        //排序事件
        btnSort: function () {
            var row = UserOrganizationObj.tree.getSelectedNode();
            var pid = "";
            var Parameter = [];
            if (!!row) {
                Parameter.push({
                    paramName: 'ID31',
                    paramValue: row.ID,
                    Operation: 'Equal',
                    Logic: "AND"
                });
            } else {
                Parameter.push({
                    paramName: 'ID31',
                    paramValue: pid,
                    Operation: 'Null',
                    Logic: "AND"
                });
            }
            var obj = {
                tablename: "Power_UserOrganization",  //被排序的表名称
                ParameterJson: mini.encode(Parameter)
            };
            //传入参数，回掉函数
            orderObj.showWin(obj, function () {
                //重新加载数据
                UserOrganizationObj.tree.reload();
            });
        },
        //导出事件
        btnExport: function () {
            var Parameter = [];

            CommControl_Export.btnExport("Power_UserOrganization", mini.encode(Parameter));
        }
    };


    var UserObj = {
        //展示数据控件
        grid: mini.get("grid"),
        //查询关键字
        txtKey: mini.get("txtKey"),
        //查询按钮
        btnSearch: function () {
            var Parameter = [];
            //所属机构
            var selectedNodes = UserOrganizationObj.tree.getSelected();
            if (!!selectedNodes) {
                var vOrg = UserOrganizationObj.tree.getSelected().ID;    //如果不进行判断，在未选中左侧节点的情况下直接取值会报错
                if (!!vOrg) {
                    Parameter.push({
                        paramName: 'UserOrg',
                        paramValue: vOrg,
                        Operation: 'Equal',
                        Logic: "AND"
                    });
                }
            }

            //输入账户或者姓名都可以进行查询
            var vkeyValue = UserObj.txtKey.value;
            if (!!vkeyValue) {
                Parameter.push({
                    LeftBrace: '(',
                    paramName: 'UID',
                    paramValue: vkeyValue,
                    Operation: 'like',
                    Logic: "OR"
                });
                Parameter.push({
                    RightBrace: ")",
                    paramName: 'Cn',
                    paramValue: vkeyValue,
                    Operation: 'like',
                    Logic: "AND"
                });
            }
            UserObj.grid.load({ ParameterJson: JSON.stringify(Parameter) });
        },
        //新增人员
        btnAdd: function () {
            var treeNode = UserOrganizationObj.tree.getSelected();
            if (!treeNode) {
                mini.alert("请先从左侧功能树选择组织后再添加！");
                return;
            }
            hasng.WinOpen({
                url: "/PowerManage/UserOrg/AddUsers",
                title: "新增人员", width: 670, height: 580, 
                onload: function (iframe) {
                    
                    var data = {OrgID: UserOrganizationObj.tree.getSelected().ID };
                    iframe.contentWindow.UserOrgObj.setData(data);
                },
                ondestroy: function (action) {
                    UserObj.grid.reload();
                }
            });

        },
        //删除人员
        btnDel: function () {
            var rows = UserObj.grid.getSelected();
            if (!!rows) {
                hasng.DelConfirm(function () {
                            UserObj.grid.loading("操作中，请稍后......");
                            $.ajax({
                                url: "/PowerManage/UserOrg/Del?id=" + rows.UserOrgID,
                                success: function (text) {
                                    UserObj.grid.reload();
                                },
                                error: function () {
                                }
                            });
                    });
            } else {
                 hasng.Alert();
            }
        },
        //排序
        btnSort: function () {
            var row = UserObj.grid.getSelected();
            var pid = "";
            if (!!row)
                pid = row.ID;

            var Parameter = [];
            var selectedNodes = UserOrganizationObj.tree.getSelected();
            if (!!selectedNodes) {
                var vOrg = UserOrganizationObj.tree.getSelected().ID;    //如果不进行判断，在未选中左侧节点的情况下直接取值会报错
                if (!!vOrg) {
                    Parameter.push({
                        paramName: 'ID3',
                        paramValue: vOrg,
                        Operation: 'Equal',
                        Logic: "AND"
                    });
                }
            }

            var obj = {
                tablename: "Power_UserOrg",  //被排序的表名称
                ParameterJson: mini.encode(Parameter)
            };
            //传入参数，回掉函数
            orderObj.showWin(obj, function () {
                //重新加载数据
                UserObj.btnSearch();
            })

        },
        //导出Excel
        btnExport: function () {
            var Parameter = [];

            //所属机构
            var selectedNodes = UserOrganizationObj.tree.getSelected();
            if (!!selectedNodes) {
                var vOrg = UserOrganizationObj.tree.getSelected().ID;    //如果不进行判断，在未选中左侧节点的情况下直接取值会报错
                if (!!vOrg) {
                    Parameter.push({
                        paramName: 'ID19',
                        paramValue: vOrg,
                        Operation: 'Equal',
                        Logic: "AND"
                    });
                }
            }
            //输入账户或者姓名都可以进行查询
            var vkeyValue = UserObj.txtKey.value;
            if (!!vkeyValue) {
                Parameter.push({
                    LeftBrace: '(',
                    paramName: 'ID2',
                    paramValue: vkeyValue,
                    Operation: 'like',
                    Logic: "OR"
                });
                Parameter.push({
                    RightBrace: ")",
                    paramName: 'ID3',
                    paramValue: vkeyValue,
                    Operation: 'like',
                    Logic: "AND"
                });
            }
            CommControl_Export.btnExport("Power_User", mini.encode(Parameter));
        },
        //导入Excel
        btnImport: function () { }
    };

    //页面初始化方法
    $(function () {

        UserOrganizationObj.tree.selectNode(UserOrganizationObj.tree.getList()[1]);
        mini_list_Tree.expandFirstNode(UserOrganizationObj.tree);
        //表格数据加载
        //  UserObj.btnSearch();

        //岗位数据加载
        stationObj.loadData();

        //展开第一级节点
        // UserOrganizationObj.tree.expandLevel(0);

    });
</script>
